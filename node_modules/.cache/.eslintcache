[{"/Users/Yu/VSCode/community_web/src/index.js":"1","/Users/Yu/VSCode/community_web/src/App.js":"2","/Users/Yu/VSCode/community_web/src/pages/Home.js":"3","/Users/Yu/VSCode/community_web/src/pages/Nav.js":"4","/Users/Yu/VSCode/community_web/src/pages/Nopage.js":"5","/Users/Yu/VSCode/community_web/src/pages/Logout.js":"6","/Users/Yu/VSCode/community_web/src/services/dbService.js":"7","/Users/Yu/VSCode/community_web/src/pages/Contact.js":"8","/Users/Yu/VSCode/community_web/src/pages/Amin.js":"9","/Users/Yu/VSCode/community_web/src/services/httpCommon.js":"10","/Users/Yu/VSCode/community_web/src/components/SideBar.js":"11","/Users/Yu/VSCode/community_web/src/components/AdminTable.js":"12","/Users/Yu/VSCode/community_web/src/components/Footer.js":"13","/Users/Yu/VSCode/community_web/src/components/LoginModal.js":"14","/Users/Yu/VSCode/community_web/src/components/RegModal.js":"15","/Users/Yu/VSCode/community_web/src/pages/Myprofile.js":"16"},{"size":217,"mtime":1671562692000,"results":"17","hashOfConfig":"18"},{"size":1169,"mtime":1672473314601,"results":"19","hashOfConfig":"18"},{"size":100,"mtime":1671562692000,"results":"20","hashOfConfig":"18"},{"size":2643,"mtime":1672550644019,"results":"21","hashOfConfig":"18"},{"size":127,"mtime":1671562692000,"results":"22","hashOfConfig":"18"},{"size":194,"mtime":1671562692000,"results":"23","hashOfConfig":"18"},{"size":1117,"mtime":1672003824979,"results":"24","hashOfConfig":"18"},{"size":869,"mtime":1672292706701,"results":"25","hashOfConfig":"18"},{"size":169,"mtime":1671562692000,"results":"26","hashOfConfig":"18"},{"size":97,"mtime":1671562692000,"results":"27","hashOfConfig":"18"},{"size":2212,"mtime":1671562692000,"results":"28","hashOfConfig":"18"},{"size":8704,"mtime":1671562692000,"results":"29","hashOfConfig":"18"},{"size":234,"mtime":1671562692000,"results":"30","hashOfConfig":"18"},{"size":2354,"mtime":1672565711000,"results":"31","hashOfConfig":"18"},{"size":4282,"mtime":1672546250411,"results":"32","hashOfConfig":"18"},{"size":423,"mtime":1672383924403,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"19ixeyo",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Yu/VSCode/community_web/src/index.js",[],[],[],"/Users/Yu/VSCode/community_web/src/App.js",["86"],[],"/Users/Yu/VSCode/community_web/src/pages/Home.js",[],[],"/Users/Yu/VSCode/community_web/src/pages/Nav.js",["87","88","89"],[],"/Users/Yu/VSCode/community_web/src/pages/Nopage.js",[],[],"/Users/Yu/VSCode/community_web/src/pages/Logout.js",["90"],[],"import { useState } from 'react';\n\nexport default function Logout(){\n    return(\n        <>\n            <h1>Logout Page</h1>\n            <button type=\"submit\">Logout</button>\n        </>\n    )\n}","/Users/Yu/VSCode/community_web/src/services/dbService.js",[],[],"/Users/Yu/VSCode/community_web/src/pages/Contact.js",[],[],"/Users/Yu/VSCode/community_web/src/pages/Amin.js",[],[],"/Users/Yu/VSCode/community_web/src/services/httpCommon.js",[],[],"/Users/Yu/VSCode/community_web/src/components/SideBar.js",["91"],[],"import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HiArrowNarrowLeft, HiMenu, HiUserCircle, HiShoppingCart, HiUserGroup, HiOfficeBuilding, HiDatabase } from \"react-icons/hi\";\nimport styles from \"../css/SideBar.module.css\";\nimport \"../css/active.css\";\nimport Footer from \"./Footer\";\nimport $ from \"jquery\";\n\nconst SideBar = () => {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const openList = (e) => {\n    $($(e.target).siblings()[0]).toggleClass(\"isActive\");\n  }\n  \n  return <section id=\"sidebar\" className={isOpened ? \"isOpened\" : \"isClosed\"}>\n    <button onClick={()=>setIsOpened(!isOpened)}>{isOpened ? <HiArrowNarrowLeft/> : <HiMenu/>}</button>\n    <div></div>\n    <article>\n      {isOpened ? <div onClick={(e)=>openList(e)}><HiUserCircle/>Login</div> : <HiUserCircle/>}\n      <ul>\n        <li><Link to=\"/login\">My Profile</Link></li>\n        <li><Link to=\"/login\">Login</Link></li>\n        <li><Link to=\"/login\">Logout</Link></li>\n      </ul>\n    </article>\n    <article>\n      {isOpened ? <div onClick={(e)=>openList(e)}><HiShoppingCart/>Market Place</div> : <HiShoppingCart/>}\n      <ul>\n        <li><Link to=\"/login\">Go to Buy</Link></li>\n        <li><Link to=\"/login\">Go to Sell</Link></li>\n      </ul>\n    </article>\n    <article>\n      {isOpened ? <div onClick={(e)=>openList(e)}><HiOfficeBuilding/>Find a job</div> : <HiOfficeBuilding/>}\n      <ul>\n        <li><Link to=\"/login\">Find a job</Link></li>\n        <li><Link to=\"/login\">Post a job</Link></li>\n      </ul>\n    </article>\n    <article>\n      {isOpened ? <div onClick={(e)=>openList(e)}><HiUserGroup/>Community</div> : <HiUserGroup/>}\n      <ul>\n        <li><Link to=\"/login\">Free Board</Link></li>\n        <li><Link to=\"/login\">Life</Link></li>\n        <li><Link to=\"/login\">Weather</Link></li>\n        <li><Link to=\"/login\">Trip</Link></li>\n        <li><Link to=\"/contact\">Contact Us</Link></li>\n      </ul>\n    </article>\n    <article>\n      {isOpened ? <div onClick={(e)=>openList(e)}><HiDatabase/>Admin</div> : <HiDatabase/>}\n      <ul>\n        <li><Link to=\"/admin\">User Management</Link></li>\n      </ul>\n    </article>\n    {isOpened && <Footer/>}\n  </section>\n}\nexport default SideBar;","/Users/Yu/VSCode/community_web/src/components/AdminTable.js",["92","93"],[],"import styles from \"../css/AdminTable.module.css\";\nimport dbService from \"../services/dbService\";\nimport {useState,useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AdminTable(){\n    const[data,setRes] = useState([]);\n    const[data2,setRes2] = useState([]);\n    const[data3,setRes3] = useState([]);\n    const[data4,setRes4] = useState([]);\n\n    const Submit = (event)=>{\n        event.preventDefault();\n        console.log(event.target)\n        // let regFormData = new FormData(event.target);\n        // dbService.getSeleted(regFormData)\n        // .then(res=>{console.log(res.data)})\n        // .catch(err=>{console.log(err)});\n    }\n\n    function UserTable(props){   \n        let key = props.key; \n        return(\n            <>\n                <tbody onClick={(event)=>Submit(event)}>\n                    <tr>   \n                        {/* <td className='pak'>{props.userId}</td> */}\n                        <td className='tripdetail'>{props.email}</td>\n                        <td className='dura'>{props.firstName}</td>\n                        <td className='date'>{props.lastName}</td>\n                        <td className='company'>{props.dob}</td>\n                        <td className='company'>{props.gender}</td>\n                        <td className='company'>active</td>\n\n                        <td className='review'><Link to=\"/mytripreview\" state={{ from: key }} className='rbutton'>BLOCK</Link></td>\n                    </tr>       \n                </tbody>\n            </>\n        )\n    }\n\n    function PostTable(props){   \n        let key = props.key; \n        return(\n            <>\n                <tbody>\n                    <tr>   \n                        <td className='pak'>{props.post_id}</td>\n                        <td className='tripdetail'>{props.title}</td>\n                        <td className='dura'>{props.user_name}</td>\n                        <td className='dura'>{props.email}</td>\n                        <td className='date'>{props.post_time}</td>\n                        <td className='company'>{props.category}</td>\n                        <td className='company'>{props.view}</td>\n                        <td className='company'><button>Edit</button><button>Delte</button></td>\n                    </tr>       \n                </tbody>\n            </>\n        )\n    }\n    \n    const AdminDash = ()=>{\n        dbService.getData()\n        .then(res=>{\n            setRes(res.data);\n        })\n        .catch(err=>{console.log(err)});\n\n        dbService.getPosts()\n        .then(res=>{\n            setRes2(res.data);\n        })\n\n        .catch(err=>{console.log(err)});\n        dbService.getPosts2()\n        .then(res=>{\n            setRes3(res.data);\n        })\n\n        .catch(err=>{console.log(err)});\n        dbService.getPosts3()\n        .then(res=>{\n            setRes4(res.data);\n        })\n        .catch(err=>{console.log(err)});\n    }\n\n    console.log(data)\n    useEffect(()=>{AdminDash()},[]);\n        \n    return(\n        <>\n            <h2>Admin Controll Page</h2>\n            <h3>{data.length}</h3>\n            <table>\n                    <caption>All Users Information</caption>\n                    <thead>\n                        <tr>\n                            {/* <th className='pak'>User ID</th> */}\n                            <th className='pak'>email</th>\n                            <th className='pak'>First Name</th>\n                            <th className='pak'>Last Name</th>\n                            <th className='pak'>Date of Birth</th>\n                            <th className='pak'>Gender</th>\n                            <th className='pak'>Status</th>\n                            <th className='pak'>Block</th>\n                        </tr>\n                    </thead>\n                    {\n                    data.map((item, idx) => {\n                        return (\n                            <UserTable\n                            key={idx}\n                            userId = {item.user_id}\n                            email = {item.email}\n                            firstName = {item.firstname}\n                            lastName = {item.lastname}\n                            dob = {item.dob}\n                            gender = {item.gender}\n                            />\n                        )\n                    })\n                    }\n            </table>\n            <h2>Posts Control</h2>\n            <table>\n                    <caption>Community Posts</caption>\n                    <thead>\n                        <tr>\n                            <th className='pak'>Post ID</th>\n                            <th className='pak'>Title</th>\n                            <th className='pak'>Writer</th>\n                            <th className='pak'>Email</th>\n                            <th className='pak'>Post Time</th>\n                            <th className='pak'>category</th>\n                            <th className='pak'>View</th>\n                            <th className='pak'>Control</th>\n                        </tr>\n                    </thead>\n                    {\n                    data2.map((item, idx) => {\n                        return (\n                            <PostTable\n                            key={idx}\n                            post_id = {item.post_id}\n                            title = {item.title}\n                            user_id = {item.user_id}\n                            user_name = {item.firstname + \" \" +item.lastname}\n                            email = {item.email}\n                            post_time = {item.post_time}\n                            category = {item.category}\n                            view = {item.view}\n                            />\n                        )\n                    })\n                    }\n            </table>\n            <table>\n                    <caption>Market Posts</caption>\n                    <thead>\n                        <tr>\n                            <th className='pak'>Post ID</th>\n                            <th className='pak'>Title</th>\n                            <th className='pak'>Writer</th>\n                            <th className='pak'>Email</th>\n                            <th className='pak'>Post Time</th>\n                            <th className='pak'>category</th>\n                            <th className='pak'>View</th>\n                            <th className='pak'>Control</th>\n                        </tr>\n                    </thead>\n                    {\n                    data3.map((item, idx) => {\n                        return (\n                            <PostTable\n                            key={idx}\n                            post_id = {item.post_id}\n                            title = {item.title}\n                            user_id = {item.user_id}\n                            user_name = {item.firstname + \" \" +item.lastname}\n                            email = {item.email}\n                            post_time = {item.post_time}\n                            category = {item.category}\n                            view = {item.view}\n                            />\n                        )\n                    })\n                    }\n            </table>\n            <table>\n                    <caption>Job Posts</caption>\n                    <thead>\n                        <tr>\n                            <th className='pak'>Post ID</th>\n                            <th className='pak'>Title</th>\n                            <th className='pak'>Writer</th>\n                            <th className='pak'>Email</th>\n                            <th className='pak'>Post Time</th>\n                            <th className='pak'>category</th>\n                            <th className='pak'>View</th>\n                            <th className='pak'>Control</th>\n                        </tr>\n                    </thead>\n                    {\n                    data4.map((item, idx) => {\n                        return (\n                            <PostTable\n                            key={idx}\n                            post_id = {item.post_id}\n                            title = {item.title}\n                            user_id = {item.user_id}\n                            user_name = {item.firstname + \" \" +item.lastname}\n                            email = {item.email}\n                            post_time = {item.post_time}\n                            category = {item.category}\n                            view = {item.view}\n                            />\n                        )\n                    })\n                    }\n            </table>\n        </>\n    )\n}","/Users/Yu/VSCode/community_web/src/components/Footer.js",[],[],"/Users/Yu/VSCode/community_web/src/components/LoginModal.js",["94","95"],[],"/Users/Yu/VSCode/community_web/src/components/RegModal.js",["96"],[],"/Users/Yu/VSCode/community_web/src/pages/Myprofile.js",["97"],[],{"ruleId":"98","severity":1,"message":"99","line":12,"column":9,"nodeType":"100","messageId":"101","endLine":12,"endColumn":22},{"ruleId":"98","severity":1,"message":"102","line":9,"column":12,"nodeType":"100","messageId":"101","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":25,"column":31,"nodeType":"105","messageId":"106","endLine":25,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":29,"column":7,"nodeType":"109","endLine":29,"endColumn":9,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"112","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":14},{"ruleId":"98","severity":1,"message":"112","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":14},{"ruleId":"98","severity":1,"message":"113","line":43,"column":13,"nodeType":"100","messageId":"101","endLine":43,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":22,"column":37,"nodeType":"105","messageId":"106","endLine":22,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":53,"column":42,"nodeType":"116","endLine":53,"endColumn":93},{"ruleId":"103","severity":1,"message":"104","line":16,"column":25,"nodeType":"105","messageId":"106","endLine":16,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":6,"column":13,"nodeType":"116","endLine":6,"endColumn":19},"no-unused-vars","'LoginFunction' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chkStorageId' and 'chkStorageRole'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'useState' is defined but never used.","'styles' is defined but never used.","'key' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"120","fix":"121"},"Update the dependencies array to be: [chkStorageId, chkStorageRole]",{"range":"122","text":"123"},[1096,1098],"[chkStorageId, chkStorageRole]"]